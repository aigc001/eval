{"trg_prediction": "\n# Create a 2D array of indices\nindices = np.indices(arr.shape)\n\n# Create a 2D array of the number of neighbors that are less than or equal\nneighbors = signal.convolve(arr, np.ones((3, 3)), mode='same', method='direct')\n\n# Find the relative extrema\nextrema = np.where((arr <= neighbors) & (arr != 0))\n\n# Get the indices of the relative extrema\nextrema_indices = indices[:, extrema[0], extrema[1]].T.tolist()\n\nprint(extrema_indices)\n"}