{"trg_prediction": "\n# Get unique IDs\nunique_ids = np.unique(example_array)\n# Create a list of centroid coordinates for each unique ID\ncentroids = []\nfor id in unique_ids:\n    # Get the coordinates of the pixels for the current ID\n    id_coords = np.argwhere(example_array == id)\n    # Calculate the centroid coordinates\n    centroid = np.mean(id_coords, axis=0)\n    centroids.append(centroid)\n# Convert the list of centroids to a numpy array\ncentroids = np.array(centroids)\n# Calculate the pairwise Manhattan distances\ndistances = scipy.spatial.distance.cdist(centroids, centroids, 'cityblock')\n# Create a list of distances with corresponding IDs\ndist_list = []\nfor i in range(distances.shape[0]):\n    for j in range(distances.shape[1]):\n        dist_list.append([unique_ids[i], unique_ids[j], distances[i, j]])\n# Convert the list of distances to a numpy array\ndist_array = np.array(dist_list)\n"}