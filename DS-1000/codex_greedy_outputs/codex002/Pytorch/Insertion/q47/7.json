{"trg_prediction": "\nimages = Variable(torch.randn(5, 3, 4, 4))\nlabels = Variable(torch.LongTensor(5, 4, 4).random_(3))\n\ndef cross_entropy2d(input, target, weight=None, size_average=True):\n    n, c, h, w = input.size()\n    log_p = F.log_softmax(input, dim=1)\n    log_p = log_p.permute(0, 3, 2, 1).contiguous().view(-1, c)\n    log_p = log_p[\n        target.view(n, h, w, 1).repeat(1, 1, 1, c) >= 0]\n    log_p = log_p.view(-1, c)\n\n    mask = target >= 0\n    target = target[mask]\n    loss = F.nll_loss(log_p, target.view(-1), weight=weight, size_average=False)\n    if size_average:\n        loss /= mask.data.sum()\n    return loss\n\nprint(cross_entropy2d(images, labels))\n"}