{"trg_prediction": "\n# Define the vocabulary\nvocabulary = ['Jscript','.Net','TypeScript','SQL', 'NodeJS','Angular','Mongo','CSS','Python','PHP','Photoshop','Oracle','Linux','C++',\"Java\",'TeamCity','Frontend','Backend','Full stack', 'UI Design', 'Web','Integration','Database design','UX']\n\n# Create a dataframe from the vocabulary\ndf = pd.DataFrame(vocabulary, columns=['words'])\n\n# Assign a unique integer to each word in the vocabulary\ndf['word_id'] = range(len(vocabulary))\n\n# Create a dictionary where the keys are the words and the values are the word_ids\nword_dict = df.set_index('words').to_dict()['word_id']\n\n# Create a CountVectorizer object and pass the word_dict to the vocabulary parameter\nvectorizer = CountVectorizer(binary=True, lowercase=False, vocabulary=word_dict)\n\n# Fit the vectorizer to the corpus and transform the corpus\nX = vectorizer.fit_transform(corpus)\n\n# Print the feature names and the matrix X\nprint(vectorizer.get_feature_names())\nprint(X.toarray())\n"}