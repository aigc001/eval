{"trg_prediction": "\ndef extract_message_data(row):\n    # Remove brackets and split string into list of key-value pairs\n    pairs = row['message'].replace('[', '').replace(']', '').split(', ')\n    \n    # Convert list of key-value pairs into dictionary\n    pairs = {pair.split(': ')[0]: pair.split(': ')[1] for pair in pairs}\n    \n    # Return dictionary\n    return pairs\n\n# Apply function to each row in dataframe\ndf_expanded = df.apply(extract_message_data, axis=1, result_type='expand')\n\n# Rename columns to match keys in message\ndf_expanded.columns = df_expanded.columns.str.replace('[\\[\\]:]', '')\n\n# Concatenate original dataframe with expanded dataframe\nresult = pd.concat([df, df_expanded], axis=1)\n\n# Fill NaN values with 'none'\nresult.fillna('none', inplace=True)\n\nprint(result)\n"}